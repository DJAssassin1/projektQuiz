/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package quiz;

import java.awt.event.ItemEvent;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JCheckBox;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import static javax.swing.JOptionPane.PLAIN_MESSAGE;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.JRadioButton;
import javax.swing.JTextField;
import menus.MainMenu;
import questions.Q1zN;
import questions.QXzN;
import questions.Questions;
import writer.FilesWriter;


/**
 *
 * @author domin
 */
public class CreateQuestion extends javax.swing.JFrame {

    /**
     * Creates new form CreateQuestion
     */
    
    public CreateQuestion() {
        initComponents();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
    }
    
    final int n=20;
    int pos;
    boolean done = false;
    int maxOfA = 14;
    String type;
    JRadioButton q1zNBtns[];
    JCheckBox qXzNBtns[];
    JTextField TFs[];
    String name;
    String question;
    LinkedList<String> a = new LinkedList();
    LinkedList<String> ra = new LinkedList();
    LinkedList<Questions> questions = new LinkedList();
    String file;
    
    public CreateQuestion(int pos,String name,LinkedList<Questions> questions, String file ) {
        initComponents();
        this.setTitle("Quiz Tac Toe");
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        
        
        this.pos = pos;
        this.name = name;
        this.file = file;
        this.questions = questions;
        if(pos>=n){
            btnEnd.setEnabled(true);
        }
        setBounds(0,0,410,230);
        TFQuestion.setVisible(false);
        lQuest.setVisible(false);
        PB.setMaximum(n);
        PB.setValue(this.pos);
        q1zNBtns = new JRadioButton[maxOfA];
        qXzNBtns = new JCheckBox[maxOfA];
        TFs = new JTextField[maxOfA];
        for(int i=0; i<maxOfA; i++){
            q1zNBtns[i] = new JRadioButton();
            add(q1zNBtns[i]);
            btnG.add(q1zNBtns[i]);
            q1zNBtns[i].setBounds(20,220+30*i,20,30);
            q1zNBtns[i].setVisible(false);
            
            qXzNBtns[i] = new JCheckBox();
            add(qXzNBtns[i]);
            qXzNBtns[i].setBounds(20,220+30*i,20,30);
            qXzNBtns[i].setVisible(false);
            
            TFs[i] = new JTextField();
            add(TFs[i]);
            TFs[i].setBounds(40,220+30*i,320,30);
            TFs[i].setVisible(false);
        }
        this.setResizable(false);
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnG = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        chooseType = new javax.swing.JComboBox<>();
        btnEnd = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        PB = new javax.swing.JProgressBar();
        btnSet = new javax.swing.JButton();
        lQuest = new javax.swing.JLabel();
        TFQuestion = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(400, 230));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Quiz Tac Toe");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        chooseType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1zN", "XzN", "Question" }));
        chooseType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chooseTypeItemStateChanged(evt);
            }
        });

        btnEnd.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnEnd.setText("End");
        btnEnd.setEnabled(false);
        btnEnd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEndActionPerformed(evt);
            }
        });

        btnNext.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnNext.setText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnSet.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSet.setText("set");
        btnSet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSetActionPerformed(evt);
            }
        });

        lQuest.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lQuest.setText("Question:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(chooseType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSet, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lQuest, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(TFQuestion)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNext))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSet)
                    .addComponent(chooseType, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TFQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lQuest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
       if(done){
           if(!TFQuestion.getText().isBlank())
           {
               question = TFQuestion.getText();
               int control = 0;
                switch(type){
                    case "1zN":
                        for(int i = 0; i<maxOfA;i++){
                            if(!TFs[i].getText().isBlank()){
                                control++;
                                if(q1zNBtns[i].isSelected()){
                                    ra.add(TFs[i].getText());
                                }
                                a.add(TFs[i].getText());
                            }
                        }
                        if(control<2){
                            a.removeAll(a);
                            ra.removeAll(ra);
                            return;
                        }
                        questions.add(new Q1zN(question,ra,a));
                        break;
                    case "XzN":
                        boolean pushed = false;
                        for(int i = 0; i<maxOfA;i++){
                            if(!TFs[i].getText().isBlank()){
                                control++;
                                if(qXzNBtns[i].isSelected()){
                                    ra.add(TFs[i].getText());
                                    pushed = true;
                                }
                                a.add(TFs[i].getText());
                            }
                        }
                        if(control<2 || !pushed){
                            a.removeAll(a);
                            ra.removeAll(ra);
                            return;
                        }
                        questions.add(new QXzN(question,ra,a));
                        break;
                    case "Question":
                        for(int i = 0; i<maxOfA;i++){
                            if(!TFs[i].getText().isBlank()){
                                control++;
                                ra.add(TFs[i].getText());
                            }
                        }
                        if(control==0){
                            a.removeAll(a);
                            ra.removeAll(ra);
                            return;
                        }
                        questions.add(new Questions(question,ra));
                        break;

                }
                CreateQuestion window = new CreateQuestion(pos+1,name,questions,file);
                window.setVisible(true);
                dispose();
           }
       }
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnEndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEndActionPerformed
        if(done){
           if(!TFQuestion.getText().isBlank())
           {
               question = TFQuestion.getText();
               int control = 0;
                switch(type){
                    case "1zN":
                        for(int i = 0; i<maxOfA;i++){
                            if(!TFs[i].getText().isBlank()){
                                control++;
                                if(q1zNBtns[i].isSelected()){
                                    ra.add(TFs[i].getText());
                                }
                                a.add(TFs[i].getText());
                            }
                        }
                        if(control<2){
                            a.removeAll(a);
                            ra.removeAll(ra);
                            return;
                        }
                        questions.add(new Q1zN(question,ra,a));
                        break;
                    case "XzN":
                        boolean pushed = false;
                        for(int i = 0; i<maxOfA;i++){
                            if(!TFs[i].getText().isBlank()){
                                control++;
                                if(qXzNBtns[i].isSelected()){
                                    pushed = true;
                                    ra.add(TFs[i].getText());
                                }
                                a.add(TFs[i].getText());
                            }
                        }
                        if(control<2 || !pushed){
                            a.removeAll(a);
                            ra.removeAll(ra);
                            return;
                        }
                        questions.add(new QXzN(question,ra,a));
                        break;
                    case "Question":
                        for(int i = 0; i<maxOfA;i++){
                            if(!TFs[i].getText().isBlank()){
                                control++;
                                ra.add(TFs[i].getText());
                            }
                        }
                        if(control==0){
                            a.removeAll(a);
                            ra.removeAll(ra);
                            return;
                        }
                        questions.add(new Questions(question,ra));
                        break;

                }
                boolean end = FilesWriter.writer(questions,name,file);
                if(end){
                    showMessageDialog(null, "File "+file+" was added", "Info", PLAIN_MESSAGE);
                    MainMenu window = new MainMenu();
                    window.setVisible(true);
                    dispose();
                }
                else{
                    showMessageDialog(null, "Failed to add the file: " + file, "Error", ERROR_MESSAGE);
                }
           }
       }
    }//GEN-LAST:event_btnEndActionPerformed

    private void btnSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSetActionPerformed
        type = (String) chooseType.getSelectedItem();
        //writer.write(TFQuestion.getText()+'\n');
        TFQuestion.setVisible(true);
        lQuest.setVisible(true);
        switch(type){
            case "1zN":
                setBounds(0,0,400,220+35*maxOfA);
                for(int i = 0; i<maxOfA;i++){
                    qXzNBtns[i].setVisible(false);
                    q1zNBtns[i].setSelected(false);
                    TFs[i].setText("");
                    q1zNBtns[i].setVisible(true);
                    TFs[i].setVisible(true);
                }
                q1zNBtns[0].setSelected(true);
                break;
            case "XzN":
                setBounds(0,0,400,220+35*maxOfA);
                for(int i = 0; i<maxOfA;i++){
                    q1zNBtns[i].setVisible(false);
                    qXzNBtns[i].setSelected(false);
                    TFs[i].setText("");
                    qXzNBtns[i].setVisible(true);
                    TFs[i].setVisible(true);
                }
                break;
            case "Question":
                setBounds(0,0,400,220+35*maxOfA);
                for(int i = 0; i<maxOfA;i++){
                    TFs[i].setText("");
                    TFs[i].setVisible(true);
                    q1zNBtns[i].setVisible(false);
                    qXzNBtns[i].setVisible(false);
                }
                break;
                
        }
        done = true;
        this.setResizable(false);
        this.setLocationRelativeTo(null);
    }//GEN-LAST:event_btnSetActionPerformed

    private void chooseTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chooseTypeItemStateChanged
 
    }//GEN-LAST:event_chooseTypeItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateQuestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateQuestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateQuestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateQuestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CreateQuestion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar PB;
    private javax.swing.JTextField TFQuestion;
    private javax.swing.JButton btnEnd;
    private javax.swing.ButtonGroup btnG;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnSet;
    private javax.swing.JComboBox<String> chooseType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lQuest;
    // End of variables declaration//GEN-END:variables
}
